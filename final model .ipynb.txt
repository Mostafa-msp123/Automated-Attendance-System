import tkinter as tk
from tkinter import messagebox
import cv2
from PIL import Image, ImageTk
import face_recognition
import numpy as np
import os
import pandas as pd
from datetime import datetime

# مسار ملف Excel
attendance_file = r"C:\Users\ramez kamal\Desktop\الدير\build\New folder\data.xlsx"

# تحميل الصور المعروفة وتخزينها في قائمة
known_faces = []
known_names = []

# يجب وضع مسار الصور هنا
image_paths = [r"C:\Users\DELL\Pictures\Camera Roll\ramez.jpg"]

for image_path in image_paths:
    image = face_recognition.load_image_file(image_path)
    face_encoding = face_recognition.face_encodings(image)[0]
    known_faces.append(face_encoding)
    # استخراج اسم الملف كاسم للشخص
    known_names.append(os.path.basename(image_path).split('.')[0])

# إنشاء نافذة رئيسية
root = tk.Tk()
root.title("Automated Attendance System")

# ضبط حجم النافذة
root.geometry("700x700")
root.configure(bg="#b0c4de")

# إنشاء إطار لتجميع عناصر الإدخال
frame = tk.Frame(root, bg="#2c3e50")
frame.place(relx=0.5, rely=0.5, anchor="center", width=500, height=550)

# إضافة عنوان
title = tk.Label(frame, text="Automated Attendance System using cameras", bg="#2c3e50", fg="white", font=("Arial", 17))
title.pack(pady=15)

# إضافة حقل اسم المستخدم
username_label = tk.Label(frame, text="user name:", bg="#2c3e50", fg="white", font=("Arial", 20))
username_label.pack(anchor="w", padx=20)

# إضافة حقل إدخال لاسم المستخدم
username_entry = tk.Entry(frame, bg="#48c9b0", font=("Arial", 12))
username_entry.pack(fill="x", padx=20, pady=10)

# إضافة حقل كلمة المرور
password_label = tk.Label(frame, text="password:", bg="#2c3e50", fg="white", font=("Arial", 20))
password_label.pack(anchor="w", padx=20)

# إضافة حقل إدخال كلمة المرور
password_entry = tk.Entry(frame, bg="#48c9b0", font=("Arial", 12), show="*")
password_entry.pack(fill="x", padx=20, pady=10)

# دالة للتحقق من اسم المستخدم وكلمة المرور
def check_credentials():
    username = username_entry.get()
    password = password_entry.get()
    
    if username == "رامز" and password == "1234":
        open_camera_window()
    else:
        messagebox.showerror("Error", "اسم المستخدم أو كلمة المرور غير صحيحة")

# دالة لفتح نافذة جديدة تحتوي على الكاميرا وزر توقف
def open_camera_window():
    # إنشاء نافذة جديدة
 camera_window = tk.Toplevel(root)
    camera_window.title("Camera View")
    camera_window.geometry("1000x1000")
    
    # دالة لتسجيل الحضور في ملف Excel
    def mark_attendance(name):
        # قراءة البيانات الحالية (إن وجدت) من ملف Excel
        try:
            df = pd.read_excel(attendance_file)
        except FileNotFoundError:
            df = pd.DataFrame(columns=["Name", "Date", "Time"])

        # الحصول على التاريخ والوقت الحاليين
        now = datetime.now()
        date_str = now.strftime("%Y-%m-%d")
        time_str = now.strftime("%H:%M:%S")
        
        # إضافة السجل الجديد إلى ملف Excel
        new_entry = {"Name": name, "Date": date_str, "Time": time_str}
        df = df.append(new_entry, ignore_index=True)
        
        # حفظ الملف
        df.to_excel(attendance_file, index=False)
    
    # دالة لإظهار الفيديو من الكاميرا في Label
    def show_frame():
        ret, frame = cap.read()
        if ret:
            rgb_frame = frame[:, :, ::-1]
            
            # البحث عن الوجوه في الإطار الحالي
            face_locations = face_recognition.face_locations(rgb_frame)
            face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)
            
            # تحديد الأشخاص
            for (top, right, bottom, left), face_encoding in zip(face_locations, face_encodings):
                matches = face_recognition.compare_faces(known_faces, face_encoding)
                name = "Unknown"
                
                # التحقق من مطابقة الوجه وتعيين الاسم إذا كان معروفًا
  if True in matches:
                    first_match_index = matches.index(True)
                    name = known_names[first_match_index]
                    mark_attendance(name)  # تسجيل الحضور في ملف Excel
                
                # رسم المربع حول الوجه
                cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)
                
                # كتابة الاسم على الإطار
                cv2.putText(frame, name, (left + 6, bottom - 6), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 1)
            
            # عرض الإطار المحدث
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            img = Image.fromarray(frame)
            imgtk = ImageTk.PhotoImage(image=img)
            camera_label.imgtk = imgtk
            camera_label.configure(image=imgtk)
        
        # تحديث الإطار كل 10 ميللي ثانية
        camera_label.after(10, show_frame)
    
    # بدء الكاميرا
    cap = cv2.VideoCapture(0)
    
    # إضافة Label لعرض الفيديو
    camera_label = tk.Label(camera_window)
    camera_label.pack(fill="both", expand=True)
    
    # استدعاء دالة العرض
    show_frame()
    
    # دالة لإغلاق الكاميرا وإنهاء البرنامج
    def stop_camera():
        cap.release()
        cv2.destroyAllWindows()
        root.quit()
 # إضافة زر لإيقاف الكاميرا وإنهاء البرنامج
    stop_button = tk.Button(camera_window, text="STOP", command=stop_camera, font=("Arial", 14), bg="#e74c3c", fg="white")
    stop_button.pack(pady=20, side="bottom")

# إضافة زر دخول
login_button = tk.Button(root, text="ENTER", command=check_credentials, font=("Arial", 14), bg="#1abc9c", fg="white")
login_button.pack(pady=20)

# بدء الحلقة الرئيسية
root.mainloop()